import type { CSSProperties, Component, DefineComponent, SVGAttributes, VNode } from 'vue'
import type { NodeProps } from './node'
import type { EdgeProps } from './edge'
/** Global component names are components registered to the vue instance and are "autoloaded" by their string name */
declare type GlobalComponentName = string
/** Node Components can either be a component definition or a string name */
export declare type NodeComponent = Component<NodeProps> | DefineComponent<NodeProps, any, any, any, any> | GlobalComponentName
export declare type NodeTypesObject = {
  [key in keyof DefaultNodeTypes]?: NodeComponent
} & Record<string, NodeComponent>
export declare type EdgeTypesObject = {
  [key in keyof DefaultEdgeTypes]?: EdgeComponent
} & Record<string, EdgeComponent>
/** Edge Components can either be a component definition or a string name */
export declare type EdgeComponent =
  | Component<EdgeProps>
  | DefineComponent<EdgeProps, any, any, any, any, any>
  | GlobalComponentName
export declare type DefaultEdgeTypes = {
  [key in 'default' | 'straight' | 'smoothstep' | 'step' | 'simplebezier']: EdgeComponent
}
export declare type DefaultNodeTypes = {
  [key in 'input' | 'output' | 'default']: NodeComponent
}
/** these props are passed to edge texts */
export interface EdgeTextProps extends SVGAttributes {
  x: number
  y: number
  label?: string | VNode | Object
  labelStyle?: CSSProperties
  labelShowBg?: boolean
  labelBgStyle?: CSSProperties
  labelBgPadding?: [number, number]
  labelBgBorderRadius?: number
}
export {}
